name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
        features:
          - default
          - server
          - openapi
          - server,openapi
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Clippy
      run: cargo clippy --all-targets --features ${{ matrix.features }} -- -D warnings
    
    - name: Run tests
      run: cargo test --features ${{ matrix.features }} --verbose
      env:
        OPENACT_MASTER_KEY: 0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef

  build:
    name: Build Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        features:
          - default
          - server,openapi
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
    
    - name: Build
      run: cargo build --target ${{ matrix.target }} --features ${{ matrix.features }}

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Security audit
      run: cargo audit

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview
    
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov
    
    - name: Generate code coverage
      run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      env:
        OPENACT_MASTER_KEY: 0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: lcov.info
        fail_ci_if_error: true

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Build docs
      run: cargo doc --all-features --no-deps
    
    - name: Check OpenAPI docs
      run: |
        cargo run --bin openact --features server,openapi &
        sleep 10
        curl -f http://localhost:8080/api-docs/openapi.json > /dev/null
        pkill -f openact || true
      env:
        OPENACT_MASTER_KEY: 0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: openact_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
    
    - name: Run integration tests
      run: cargo test --features server,openapi --test '*' -- --test-threads=1
      env:
        OPENACT_MASTER_KEY: 0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef
        OPENACT_DB_URL: postgres://postgres:postgres@localhost:5432/openact_test

  minimal-deps:
    name: Minimal Dependencies
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-minimal-versions
      run: cargo install cargo-minimal-versions
    
    - name: Check minimal versions
      run: cargo minimal-versions check